subl~ launches sublime

How did viewing a diff between two versions of a file help you see the bug that was introduced?
IT quickly identified the section which contained the error. This meant that I did not have to spend alot of time searching for the errors.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You can see where code worked before and where errors might happen in new code. 
You can reuse old code as well.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pro: less clutter to deal with when errors occur. i.e. trying to do a diff on large files would be probnlematic
Con: might forget to commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Multiple savings work well when there are coding and building tht requires changes to multiple files tht may be relaterd eg. html and css changes may be done together for one logical change, similarily changes to main class and an object.

How can you use the commands git log and git diff to view the history of files?
To view the versions use the git log command. Then to see what changes were made by previous fules use the git diff with the file names eg. git diff file_2 file_1 to see what changes were made at the commit.

How might using version control make you more confident to make changes that could break something?
using version controls now means you cxan always revert to a state where it worked so breaking things to make awesome things is foine.